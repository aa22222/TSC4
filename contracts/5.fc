{-
  TASK 5 - Fibonacci sequence
  Implement a function that generates the Fibonacci
  sequence from N to N+K terms (0<=N<=370; 0<=N+K<=370; 0<=K<=255).
  The first two terms of the Fibonacci sequence are F_0 = 0 and F_1 = 1,
  and the rest are defined as F_n = F_(n-1) + F_(n-2).
  The resulting Fibonacci sequence should be stored in a tuple.
  For e2xample, a request with N = 1 and K = 3 should return a tuple [1, 1, 2],
  and a request with N = 201 and K = 4 should return a tuple
  [453973694165307953197296969697410619233826,
  734544867157818093234908902110449296423351,
  1188518561323126046432205871807859915657177,
  1923063428480944139667114773918309212080528]
-}
;;"DUP 1 SETGLOB DUP2 0 EQINT IFJMP:<{ 3 BLKDROP NIL }> 0 EQINT IFJMP:<{ DUP 1 EQINT IFJMP:<{ 2DROP ZERO SINGLE RETALT }> ZERO ONE ROT -2 ADDCONST REPEAT:<{ DUP2 ADD }> 1 GETGLOB TUPLEVAR SWAP DROP }> SWAP ZERO ONE ROT -1 ADDCONST REPEAT:<{ TUCK ADD }> ROT -1 ADDCONST REPEAT:<{ DUP2 ADD }> 1 GETGLOB TUPLEVAR SWAP DROP";

() recv_internal() {
}

(tuple) ans(int a, int b, int n, int k) asm "DUP 1 SETGLOB ADD -2 ADDCONST REPEAT:<{ DUP2 ADD }> 1 GETGLOB TUPLEVAR 1 INT ONLYTOPX";
(tuple) sing(int n) asm "SINGLE";

;; testable
(tuple) fibonacci_sequence(int n, int k) method_id {
  if(k == 0) {
    return empty_tuple();
  }
  if(n + k == 1) {
    return sing(0);
  }
  int a = 0;
  int b = 1;
  if(n > 350){
    a = 6254449428820551641549772190170184190608177514674331726439961915653414425;
    b = 10119911756749018713965376799211044556615579094364594923736162239653346274;
    n -= 350;
  }
  if(n > 300){
    a = 222232244629420445529739893461909967206666939096499764990979600 ;
    b = 359579325206583560961765665172189099052367214309267232255589801;
    n -= 300;
  }
  if(n > 250){
    a = 7896325826131730509282738943634332893686268675876375;
    b = 12776523572924732586037033894655031898659556447352249;
    n -= 250;
  }
  if(n > 200){
    a = 280571172992510140037611932413038677189525;
    b = 453973694165307953197296969697410619233826;
    n -= 200;
  }
  if(n > 150){
    a = 9969216677189303386214405760200;
    b = 16130531424904581415797907386349;
    n -= 150;
  }
  if(n > 100){
    a = 354224848179261915075;
    b = 573147844013817084101;
    n -= 100;
  }
  if(n > 50){
    a = 12586269025;
    b = 20365011074;
    n -= 50;
  }
  return ans(a, b, n, k);
}

